module gtDigis = L1GlobalTrigger {
 
    // input tag for GMT readout collection: 
    //     gmtDigis = GMT emulator
    //     l1GtUnpack     = GT unpacker (common GT/GMT unpacker)
    InputTag GmtInputTag = gmtDigis 

    // input tag for GCT readout collections: 
    //     gctDigis = GCT emulator 
    //     l1GctUnpack    = GCT unpacker 
    InputTag GctInputTag = gctDigis

    // input tag for technical triggers: 
    //     techTrigDigis = technical trigger emulator 
    InputTag TechnicalTriggersInputTag = techTrigDigis
    
    // logical flag to produce the L1 GT DAQ readout record
    //     if true, produce the record
    bool ProduceL1GtDaqRecord = true
    
    // logical flag to produce the L1 GT EVM readout record
    //     if true, produce the record
    bool ProduceL1GtEvmRecord = true

    // logical flag to produce the L1 GT object map record
    //     if true, produce the record
    bool ProduceL1GtObjectMapRecord = true

    // logical flag to write the PSB content in the  L1 GT DAQ record
    //     if true, write the PSB content in the record
    bool WritePsbL1GtDaqRecord = true
    
    // logical flag to read the technical trigger records
    //     if true, it will read via getMany the available records
    bool ReadTechnicalTriggerRecords = true
    
    // number of "bunch crossing in the event" (BxInEvent) to be emulated
    // symmetric around L1Accept (BxInEvent = 0):
    //    1 (BxInEvent = 0); 3 (F 0 1) (standard record); 5 (E F 0 1 2) (debug record)
    // even numbers (except 0) "rounded" to the nearest lower odd number
    // negative value: emulate TotalBxInEvent as given in EventSetup  
    int32 EmulateBxInEvent = 3
    
}
